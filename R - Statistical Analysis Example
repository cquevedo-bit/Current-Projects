library (tidyverse)
library (dplyr)
library (stats)
library(readxl)
library(base)
library (ggplot2)

# The below R Script aims to plot all POs from given data set and determine the outliers.
# In this case anything about the fitted Linear Regression line will be POs
# that came through and were potentially overcharged (Confirmation Price  > Contract Price)
# Being able to identify outliers as such can aid in the ability to identify trigger points.
# Final report could have 

ACH_RESEARCH <- read_excel("C:/Users/cquevedo/OneDrive - vizientinc.com/Desktop/ACH_RESEARCH.xlsm", 
                           sheet = "PO Data",)

# Below lines rename column names so they can be referenced via ggplot
ACH_cut2 <- rename(ACH_RESEARCH, Confirmation_Price = 'Confirmation Price')
ACH_cut2 <- rename(ACH_cut2, Contract_Price = 'Contract Price')

summary(ACH_cut2)
# Plotting columns for exploratory data analysis
ggplot(ACH_cut2, aes(x = Contract_Price, y = Confirmation_Price)) + geom_point()

linear_model <- lm(Confirmation_Price ~ Contract_Price, data = ACH_cut2)

#Cleaning the data/preparing by removing NA's from 
#   data set and replacing with 0s so analysis can be performed
data_clean <-ifelse(is.na(ACH_cut2$Confirmation_Price), 0, ACH_cut2$Confirmation_Price)
mean_data_1 <-mean(data_clean)
print(mean_data_1)

#Cleaning the data/preparing by removing NA's from 
#   data set and replacing with 0s so analysis can be performed
data_clean <-ifelse(is.na(ACH_cut2$Confirmation_Price), 0, ACH_cut2$Confirmation_Price)
sd_data_1 <-sd(data_clean)
print(sd_data_1)

#Cleaning the data/preparing by removing NA's from 
#   data set and replacing with 0s so analysis can be performed
data_clean_2 <-ifelse(is.na(ACH_cut2$Contract_Price), 0, ACH_cut2$Contract_Price)
mean_data_2 <-mean(data_clean_2)
print(mean_data_2)

#Cleaning the data/preparing by removing NA's from 
#   data set and replacing with 0s so analysis can be performed
data_clean_2 <-ifelse(is.na(ACH_cut2$Contract_Price), 0, ACH_cut2$Contract_Price)
sd_data_2 <-sd(data_clean_2)
print(sd_data_2)

ggplot(ACH_cut2, aes(x = Contract_Price, y = Confirmation_Price)) + geom_point() + 
  geom_smooth(method = "lm", formula = y ~ x, color = "blue")

correlation <- cor(ACH_cut2$Confirmation_Price, ACH_cut2$Contract_Price)
p_value <- cor.test(ACH_cut2$Confirmation_Price, ACH_cut2$Contract_Price)$p.value

cat("Correlation:", correlation, "\n")
cat("P-value:", p_value, "\n" )

summary_Data <- summary(ACH_cut2)

#Statistical summary of Confirmation Price column
summary_Conf_Price <- summary(data_clean)
print(summary_Conf_Price)

#Statistical summary of Contract Price column
summary_Contract_Price <- summary(data_clean_2)
print(summary_Contract_Price)
